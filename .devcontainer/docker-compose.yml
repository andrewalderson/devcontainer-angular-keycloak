services:
  # this container runs at startup to set the correct permissions on the keycloak_data volume
  # this volume requires the keycloak user to have access to the volume to prevent AccessDenied exceptions
  # if for some reasone this doesn't set the permissions because of a race condition you can run the command in a terminal
  # docker run --rm -it -v keycloak_data:/opt/keycloak/data/h2 busybox sh -c "chown -R 1000:1000 /opt/keycloak/data/h2"
  # this needs to be run when the keycloak container is stopped - I think
  keycloak-init:
    image: busybox
    command: ['sh', '-c', 'chown -R 1000:1000 /opt/keycloak/data/h2']
    volumes:
      - keycloak-data:/opt/keycloak/data/h2
    user: '0'
    entrypoint: ''
    # Remove the container after it runs
    restart: 'no'

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    ports:
      - '8080:8080'
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    command: start-dev --import-realm
    volumes:
      # mount the h2 database files into a volume
      - keycloak-data:/opt/keycloak/data/h2
      - keycloak-import:/opt/keycloak/data/import:ro
    depends_on:
      keycloak-init:
        condition: service_completed_successfully
      app:
        condition: service_started
        restart: true

  app:
    image: mcr.microsoft.com/devcontainers/typescript-node:1-22-bookworm
    # There is currently an issue with running vite dev server in a devcontainer in vs code
    # Disabling ipv6 in the kernal fixes it while they argue about who's issue it is to fix
    # https://github.com/vitejs/vite/issues/16522
    # https://github.com/microsoft/vscode-remote-release/issues/7029
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    volumes:
      - ..:/workspaces:cached
      # mount the keycloak config in the project src as a volume so we can access it in the keycloak service
      # docker is overwriting the .keycloak directory which it is not supposed to do
      # so we are creating a subdirectory on start up (docker creates it automatically) and copying config file into it
      - keycloak-import:/workspaces/devcontainer-angular-keycloak/.keycloak/import
    command: sh -c "cp /workspaces/devcontainer-angular-keycloak/.keycloak/dev-export.json /workspaces/devcontainer-angular-keycloak/.keycloak/import/dev-export.json && sleep infinity"

volumes:
  keycloak-data:
  keycloak-import:
